---
- name: Install and configure MySQL server
  hosts: tag_Role_db_server
  become: true
  tasks:  
    - name: Install MySQL server
      apt:
        name: 
          - mysql-server
          - mysql-client 
          - python3-mysqldb
          - libmysqlclient-dev
        state: present
        update_cache: yes
    - name: Make sure DB listens on 0.0.0.0
      lineinfile:
        path: /etc/mysql/mysql.conf.d/mysqld.cnf
        regexp: '^bind-address'
        line: 'bind-address = 0.0.0.0'
        state: present
    - name: Start MySQL service
      service:
        name: mysql
        state: started
        enabled: yes
    - name: Create DB user
      mysql_user:
        name: '{{db_user}}'
        password: '{{db_password}}'
        priv: '*.*:ALL'
        host: '%'
        state: present
    - name: Create DB 
      mysql_db:
        name: java-app-db
        state: present
    - name: Restart service httpd, in all cases
      service:
        name: mysql
        state: restarted
    - name: Grab DB server IP and store as a fact
      set_fact:
        db_server_ip: "{{ ansible_ssh_host }}"

- name: Install java-app
  hosts: tag_Role_web_app_server
  vars:
    db_server_ip: "{{ hostvars[groups['tag_Role_db_server'][0]]['db_server_ip'] }}"
  tasks:
    - name: Build locally
      local_action: 
        module: command
        chdir: /home/ubuntu/ansible-practice/web-app
        cmd: ./gradlew build
    - name: Copy to server
      copy:
        src: /home/ubuntu/ansible-practice/web-app/build/libs/bootcamp-java-mysql-project-1.0-SNAPSHOT.jar
        dest: /home/ubuntu/java-app.jar
    - name: make sure Java is installed
      become: true
      apt:
        name: openjdk-17-jre
        state: present
        update_cache: yes
    - name: Check if prev app is running
      shell: ps aux | grep "[j]ava -jar" | awk '{print $2}'
      register: running_processes
    - name: Kill prev run app
      become: true
      command:
        cmd: kill {{running_processes.stdout}}
      when: running_processes.stdout != ""
    - name: Run new app
      shell: export DB_USER={{db_user}} && export DB_PWD={{db_password}} && export DB_NAME=java-app-db && export DB_SERVER={{db_server_ip}} && java -jar /home/ubuntu/java-app.jar
      async: 1000
      poll: 0
    - name: Make sure app is available
      uri:
        url: 'http://{{ ansible_ssh_host }}:8080'
      register: _result
      until: _result.status == 200
      retries: 12 # 12 * 5 seconds = 1 min
      delay: 5 # Every 5 seconds