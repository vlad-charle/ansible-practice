---
# - name: Wait for connection
#   hosts: all
#   gather_facts: false
#   tasks:
#     - name: Make sure VM is available
#       wait_for_connection:
#         delay: 10
#         timeout: 300
#     - name: Make sure SSH port is available
#       wait_for:
#         port: 22
#         host: '{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}'
#         delay: 10
#         timeout: 300
#       vars:
#         ansible_connection: local
#         ansible_python_interpreter: /usr/bin/python3

- name: Install and configure MySQL server
  hosts: tag_Role_db_server
  become: true
  tasks:  
    - name: Install MySQL server
      apt:
        name: 
          - mysql-server
          - mysql-client 
          - python3-mysqldb
          - libmysqlclient-dev
        state: present
        update_cache: yes
    - name: Start MySQL service
      service:
        name: mysql
        state: started
        enabled: yes
    - name: Create DB user
      mysql_user:
        name: '{{db_user}}'
        password: '{{db_password}}'
        priv: '*.*:ALL'
        host: '%'
        state: present
    - name: Create DB 
      mysql_db:
        name: java-app-db
        state: present
    - name: Grab DB server IP
      debug:
        msg: "{{ ansible_ssh_host }}"
      register: db_server_ip

- name: Install java-app
  hosts: tag_Role_web_app_server
  become: true
  tasks:
    # - name: Create directory
    #   file:
    #     path: /home/ubuntu/ansible
    #     state: present
    # - name: Checkout java-app repo
    #   git:
    #     repo: 'https://github.com/vlad-charle/ansible-practice.git'
    #     dest: /home/ubuntu/ansible
    - name: Build locally
      local_action: 
        module: command
        chdir: /home/ubuntu/ansible/ansible-practice/web-app
        cmd: ./gradlew build
    - name: Copy to server
      copy:
        src: /home/ubuntu/ansible/ansible-practice/web-app/build/libs/bootcamp-java-mysql-project-1.0-SNAPSHOT.jar
        dest: /home/ubuntu/java-app.jar
    - name: Check if prev app is running
      shell: ps aux | grep "[j]ava -jar" | awk '{print $2}'
      register: running_processes
    - name: Kill prev run app
      command:
        cmd: kill {{running_processes.stdout}}
      when: running_processes.stdout != ""
    - name: Set DB_USER environment variable for ec2-user
      lineinfile:
        path: /home/ubuntu/.bashrc
        regexp: '^export DB_USER='
        line: 'export DB_USER={{db_user}}'
        state: present
    - name: Set DB_PWD environment variable for ec2-user
      lineinfile:
        path: /home/ubuntu/.bashrc
        regexp: '^export DB_PWD='
        line: 'export DB_PWD={{db_password}}'
        state: present
    - name: Set DB_NAME environment variable for ec2-user
      lineinfile:
        path: /home/ubuntu/.bashrc
        regexp: '^export DB_NAME='
        line: 'export DB_NAME=java-app-db'
        state: present
    - name: Set DB_SERVER environment variable for ec2-user
      lineinfile:
        path: /home/ubuntu/.bashrc
        regexp: '^export DB_SERVER='
        line: 'export DB_SERVER={{db_server_ip}}'
        state: present
    - name: Run new app
      command:
        cmd: java -jar /home/ubuntu/java-app.jar
      async: 1000
      poll: 0
